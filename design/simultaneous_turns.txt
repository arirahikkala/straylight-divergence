Woah. Of all my bad ideas, this one takes the cake. But it goes with the usual design aesthetic of making big game mechanics choices for technical reasons - not because they're easy to implement, but because they're interesting to implement. And because they confer unusual technical advantages. In the case of simultaneous turns...

- AIs can run in parallel. Which is kind of crazy. But yeah, they can. Both with themselves and with the player. 
- Enforces at least somewhat sorta semi-clean separation between interface and game! (finally double-checking of actions is meaningful again!)
- Conceptually allows for for a notion of "concurrency" - that is, even with an initiative system, you're doing things "at the same time"

Now, what does it take to implement this awesomeness? Well, simple. Er. Simple to say. Might be hard to implement. Basically, there needs (after all!) to be an Action type which describes what action an actor is going to take on a given turn.

Actions are not simple things! Actions can be really crazy complicated things because the world can change right under your feet, so to say, and any control that the player or the AIs can exert over their actions has to be reflected in the corresponding Action. So, let's say the player enters a keypress to enter what, at that time and according to that player's view, is empty. What if it gets filled with a closed door? What if it gets filled with a friendly actor? An enemy actor? What if the player bumps into an actor that moves away on the next turn? Which even takes place first, the bump or the actor moving away, or is there a way for them to happen truly simultaneously?

Well, truth is, "truly simultaneous" actions probably just aren't doable. I mean, some few games do them. Or, well, I can think of one: Diplomacy. And that's got very restricted scope and, even within that scope, crazy ridiculously complicated resolution rules for unusual situations. So, I'll go with an initiative system instead. A simple system will be enough given that roguelikes are single-player games where a turn is a very short time, but... just an initiative number? Nah, something a *bit* more manipulable would be nice. But basically, the idea is: Everyone determines an action, initiatives get rolled, actions are resolved in order of initiative, next turn.

Note that this system seems to make it rather difficult to put in things like free actions or multiple actions per turn in general. Maybe some kind of an "I get my own turn!" system, but that partially breaks the conceptual advantage. Shadowrun's system of multiple initiative passes maybe? Nah, that's overcomplicating things again. Besides, initiative passes are ugly (I can fire a gun faster than you!). And something like fast movement over multiple tiles... well, actually, I can't see a reason why it wouldn't work. It's just that it'll have to be kept strictly within the turn system, i.e.... suppose you get to move two tiles per turn, then to the player it'll look like every second turn their LOS isn't updating (because LOS is only ever computed precisely once per turn, at its beginning), that if their movement is interrupted they might end up one tile back rather than just not being able to enter a tile, etc.. Will have to see how that really works in practice but it sounds like a very reasonable way to depict "going so fast you don't see where you're going".

Okay, so let's look a bit at possibilities for actual implementations of Action.

data Action = 
     MoveTo Coord -- or
     Move Direction -- ... yeah, problems already. What if the actor gets teleported before their action? Should they give up their action?

... I'm going to say that yes, they should. That is, the action is MoveTo Coord, or rather WalkTo Coord, and it's cancelled if, for instance, the actor is not adjacent to the tile they're trying to move to anymore. This means a bit of a restriction on the game: There must be no effects that move the player around more than occasionally, because if moving is implemented like this, then every time you're moved around it's a "surprise". 

Alternative, record both the direction and the target. Cancel normally, except if the situation is one where the player would want to keep walking resolutely in a given direction, use the direction instead. Good luck figuring out how to do that, though.

Bump combat seems quite reasonable: It's a MeleeAttack ObjRef action (with little deliberation beyond that, I think - so that, for instance, if you get disarmed, it's ok if the game says you punch them instead, because again these are very short periods of time we're talking about). What if they go out of reach before your action is resolved? Then print a message saying they slip away (do the same to tell the player they slipped away from someone else's melee attack). With ranged combat there could be some fanciness. For instance the attacker could shoot at a random direction uniformly chosen between your beginning-of-turn position and end-of-turn position - meaning that initiative would make no difference to dodging bullets (except if you actually dodge behind cover) but constantly moving around would. 
